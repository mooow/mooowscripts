#!/usr/bin/zsh

# 
# Copyright (C) 2014i, Lorenzo Mureu <mureulor@gmail.com>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, 
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, 
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this 
# list of conditions and the following disclaimer in the documentation and/or other 
# materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors 
# may be used to endorse or promote products derived from this software without 
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, 
# OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# version 1
#usage() {
#	echo "Usage: $0 program\nWait for program to terminate"
#}
#
#[ $# -eq 1 ] || { usage; exit 1 }
#
#p=$(pidof -s $1)
#
#x=$?
#[ $x -eq 0 ] || exit $x
#
#p=$(basename $p)
#while [ -d /proc/$p ]; do sleep 1; echo -n "."; done
#echo -ne "\n"
#exit 0

## version 2 - uses getopt to parse options. unstable
#
usage() {
	echo "Usage: $0 [option ... ] process"
	echo "\nWait until the first process named <process> end."
	echo "\nOptions:"
	echo "\t-a\tIf there are many processes named <process> wait until they ALL end."
	echo "\t-x\tscripts too (they are not checked by default). Please notice that \`$0 -x $0' (which would cause an infinite loop) is DISABLED."
}

wait4pids() {
	end=0
	until [ $end -eq 1 ] 
	do
		end=1
		for pid in "$@"
		do
			[ -d /proc/$pid ] && end=0
		done
		[ $end -eq 0 ] && echo -n "*" && sleep 1
	done
	echo -n "\n"
}

progname=$( basename $0 )
all="-s"
scripts=""
progs=()
i=1
for opt in $( getopt -uq "ax" "$@" )
do
#	echo $opt
	case $opt in
		-a) all="" ;;
		-x) scripts="-x" ;;
		--) i=1 ;;
		*) 
			[[ "$opt" == "$progname" ]] && exit 2
			progs[$i]=$opt
		       	i=$[ $i + 1 ]
		;;
	esac
	#echo $progs
done

pids=()
i=1
for pid in $( pidof $all $scripts $progs[@] )
do
	pids[$i]=$pid
	i=$[ $i + 1 ]
done
echo $pids
wait4pids $pids[@]

[ $i -eq 1 ] && exit 1
